// 	Json object holds the method mapping.Update the JSON object with the proper route to logical mapping based 
// 	on the example provided below : 
//  	"helloWorld"  = Service Name
//  	"method"   = http method
//  	"url" = the url component from the route
//  	"logicalName"=  When a combination of method and url from the route matches the json object , 
//  	the logical name is put in the http header as "x-CSI-ServiceName" and "x-CSI-MethodName" 
//  	"dme2url"= if provided it register the endpoint to GRM, it is optional. This is useful for JAX-RS services.
  
{
    "helloWorld": [
        {
            "method": "get",
            "url": "/rest/babel/v1/helloWorld",
            "logicalName": "GetMethod(Logical)"
        },
        {
            "method": "get",
            "url": "/services/babel/v1/jaxrsExample/jaxrs-services/echo/{input}",
            "logicalName": "GetJaxrsExampleEcho(Logical)",
            "dme2url": "/services/babel/v1/jaxrsExample/jaxrs-services/echo/{input}"
        },
        {
            "method": "get",
            "url": "/services/babel/v1/jaxrsExample/jaxrs-services/property/{fileName}/{input}",
            "logicalName": "GetJaxrsExampleProperty(Logical)",
            "dme2url": "/services/babel/v1/jaxrsExample/jaxrs-services/property/{fileName}/{input}"
        }
    ],
	     "errormessage":
	    [
	        {
	        	"method": "get",
	         	"url": "/services/babel/v1/jaxrsExample/errormessage/emls",
	         	"logicalName": "setCAETHeaders(Logical)"
	       	},
	        {
	        	"method": "get",
	        	"url": "/services/babel/v1/errorMessageLookupService2",
	        	"logicalName": "setCAETHeaders(Logical)"
	       	}        
	    
	    ]
}